version: '3.8'

services:
  # PostgreSQL principal pour l'application NestJS
  postgres-app:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: nestDB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mynetwork

  # PostgreSQL dédié à Keycloak (pour isoler les données)
  postgres-keycloak:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak-pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork

  # Service Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.0
    command: start-dev
    container_name: keycloak
    restart: always
    depends_on:
      - postgres-keycloak
    ports:
      - "9082:8080"  # Keycloak sur http://localhost:9082
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin@1234
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME: localhost
    networks:
      - mynetwork


# zookeeper service
  zookeeper:
    image: zookeeper:3.8.0
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - mynetwork
  # kafka service
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - mynetwork
# kafdrop service
  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0
    restart: always
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    networks:
      - mynetwork
  # Service NestJS 
  nestjs-app:
    build: .
    container_name: nestjs
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - postgres-app
    volumes:
      - .:/app
    command: ["npm", "run", "start:dev"]
    environment:
      DATABASE_URL: postgresql://postgres:123@postgres-app:5432/nestDB
      # Ajoutez ces variables pour Keycloak (à configurer dans votre app NestJS)
      #KEYCLOAK_URL: http://keycloak:8080
      #KEYCLOAK_REALM: votre_realm
      #KEYCLOAK_CLIENT_ID: votre_client_id
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  postgres-data:
  keycloak-pgdata: